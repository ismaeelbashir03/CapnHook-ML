name: Build and Publish

on:
  release:
    types: [created]
  workflow_dispatch:

jobs:
  build_wheels:
    name: Build wheels on ${{ matrix.os }} / Python ${{ matrix.python }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-22.04, windows-latest, macos-latest]
        python: ["3.8", "3.9", "3.10", "3.11"]

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      # QEMU for Linux ARM builds
      - name: Setup QEMU (for aarch64)
        if: matrix.os == 'ubuntu-22.04'
        uses: docker/setup-qemu-action@v2
        with:
          platforms: linux/arm64

      - name: Install cibuildwheel
        run: python -m pip install --upgrade pip cibuildwheel

      - name: Install and configure Conan
        run: |
          python -m pip install conan
          conan profile detect

      - name: Build wheels
        env:
          CIBW_BUILD: cp${{ matrix.python }}-*                # e.g. cp38-*
          CIBW_SKIP:                              # skip none
          CIBW_ARCHS: auto64                      # auto-detect arches
          CIBW_ARCHS_LINUX: "x86_64 aarch64"
          CIBW_ARCHS_MACOS: "x86_64 arm64"
          CIBW_ARCHS_WINDOWS: "x86_64"
          CIBW_BEFORE_ALL_LINUX: |
            apt-get update && apt-get install -y cmake
            python -m pip install conan
            conan profile detect
          CIBW_BEFORE_BUILD: |
            python -m pip install -U pip setuptools wheel
            conan install . --build=missing
          CIBW_BUILD_VERBOSITY: 1
        run: python -m cibuildwheel --output-dir wheelhouse

      - name: Upload built wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels-${{ matrix.os }}-py${{ matrix.python }}
          path: wheelhouse/*.whl

  build_sdist:
    name: Build source distribution
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up Python 3.10
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install build deps
        run: |
          python -m pip install --upgrade pip build

      - name: Build sdist
        run: python -m build --sdist

      - name: Upload sdist
        uses: actions/upload-artifact@v4
        with:
          name: sdist
          path: dist/*.tar.gz

  publish:
    name: Publish to PyPI
    needs: [build_wheels, build_sdist]
    runs-on: ubuntu-latest
    if: github.event_name == 'release' || github.event_name == 'workflow_dispatch'
    steps:
      - uses: actions/download-artifact@v3
        with:
          # Downloads **all** artifacts to current dir, including wheelhouse & sdist
          path: dist-final

      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          user: __token__
          password: ${{ secrets.PYPI_API_TOKEN }}
          packages-dir: dist-final/
          skip-existing: true
