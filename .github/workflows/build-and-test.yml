name: Cross Platform and Unit Tests

on: [push, pull_request]

jobs:
  tests:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: [3.12]
    runs-on: ${{ matrix.os }}
    env:
      PYTHONUTF8: "1"

    steps:
    - uses: actions/checkout@v2

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - name: Create virtual environment (Linux/macOS)
      if: matrix.os != 'windows-latest'
      run: python -m venv .venv

    - name: Activate virtual environment (Linux/macOS)
      if: matrix.os != 'windows-latest'
      run: source .venv/bin/activate

    - name: Create virtual environment (Windows)
      if: matrix.os == 'windows-latest'
      run: python -m venv venv
    
    - name: Activate virtual environment (Windows)
      if: matrix.os == 'windows-latest'
      run: .\venv\Scripts\activate

    - name: Install Python dependencies
      run: python -m pip install numpy conan nanobind pytest build twine delocate

    - name: Install Conan dependencies
      run: conan profile detect --force
      
    - name: Install Conan dependencies
      run: conan install . --build=missing --profile:build=default --profile:host=default -of build

    - name: Build package
      run: python -m build

    - name: Install package (Linux/macOS)
      if: matrix.os != 'windows-latest'
      run: pip install dist/*.whl

    - name: Install package (Windows)
      if: matrix.os == 'windows-latest'
      run: pip install (Get-ChildItem dist\*.whl).FullName

    - name: Run tests (Linux/macOS)
      if: matrix.os != 'windows-latest'
      run: python -m pytest ./tests

    - name: Run tests (Windows)
      if: matrix.os == 'windows-latest'
      run: python -m pytest .\tests\